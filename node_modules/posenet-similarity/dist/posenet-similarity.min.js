!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).pns={})}(this,function(e){"use strict";function c(e,t){var r=function(e,t){var a,s,c=[],u=Number.POSITIVE_INFINITY,p=Number.POSITIVE_INFINITY,h=Number.NEGATIVE_INFINITY,f=0,y=[];if(t){if(!(a=t.mode)||"string"!=typeof a)throw new TypeError("[Bad customWeight option] A mode must be specified and should be either 'multiply', 'replace' or 'add'.");if("object"!=typeof(s=t.scores)&&!Array.isArray(s))throw new TypeError("[Bad customWeight option] scores must be Object or Number[].\n      Please refer the document https://github.com/freshsomebody/posenet-similarity to set it correctly.")}return e.keypoints.forEach(function(e,t){var r=e.position.x,o=e.position.y;c.push(r,o),u=Math.min(u,r),p=Math.min(p,o),h=Math.max(h,Math.max(r,o));var n=e.score;if(a&&s){var i=!1;if(!s[e.part]&&0!==s[e.part]||(i=s[e.part]),!s[t]&&0!==s[t]||(i=s[t]),(i||0===i)&&"number"==typeof i)switch(a){case"multiply":n*=i;break;case"replace":n=i;break;case"add":n+=i;break;default:throw new Error("[Bad customWeight option] A mode must be specified and should be either 'multiply', 'replace' or 'add'")}}f+=n,y.push(n)}),y.push(f),[c,[u/h,p/h,h],y]}(e,t.customWeight),o=r[0],n=r[1],i=r[2];return[o=function(e){var t=0;return e.forEach(function(e){t+=Math.pow(e,2)}),t=Math.sqrt(t),e.map(function(e){return e/t})}(o=function(e,t){var r=t[0],o=t[1],n=t[2];return e.map(function(e,t){return t%2==0?e/n-r:e/n-o})}(o,n)),i]}function u(e,o){var n=0,i=0,a=0;return e.forEach(function(e,t){var r=o[t];n+=e*r,i+=e*e,a+=r*r}),i=Math.sqrt(i),a=Math.sqrt(a),n/(i*a)}function p(e,t){var r=u(e,t);return Math.sqrt(2*(1-r))}function h(e,t,r){for(var o=1/r[r.length-1],n=0,i=0;i<e.length;i++){n+=r[Math.floor(i/2)]*Math.abs(e[i]-t[i])}return o*n}e.cosineDistanceMatching=p,e.cosineSimilarity=u,e.poseSimilarity=function(e,t,r){if(!(e&&e.keypoints&&t&&t.keypoints))throw new Error("[Bad pose parameters] Please check your pose objects again.");if(0===e.keypoints.length||0===t.keypoints.length)throw new Error("[Bad pose parameters] Found pose object(s) with empty keypoint.");if(e.keypoints.length!==t.keypoints.length)throw new Error("[Bad pose parameters] The keypoint lengths of the two pose objects are not the same.");var o=Object.assign({},{strategy:"weightedDistance"},r),n=c(e,o),i=n[0],a=n[1],s=c(t,o)[0];if("string"!=typeof o.strategy){if("function"==typeof o.strategy)return o.strategy(i,s,a);throw new TypeError("[Bad strategy option] It only accepts string or function types of values.")}switch(o.strategy){case"cosineSimilarity":return u(i,s);case"cosineDistance":return p(i,s);case"weightedDistance":return h(i,s,a);default:throw new Error("[Bad strategy option] It should be either 'cosineSimilarity', 'cosineDistance' or 'weightedDistance' (default).")}},e.vectorizeAndNormalize=c,e.weightedDistanceMatching=h,Object.defineProperty(e,"__esModule",{value:!0})});
